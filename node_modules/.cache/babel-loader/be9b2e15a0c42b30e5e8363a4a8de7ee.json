{"remainingRequest":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/babel-loader/lib/index.js!/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tristan/travail/learning_fullstack/LFS_todolist_2020/src/components/postContent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/src/components/postContent.vue","mtime":1604582513928},{"path":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/cache-loader/dist/cjs.js","mtime":1594123377914},{"path":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/babel-loader/lib/index.js","mtime":1594123377926},{"path":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/cache-loader/dist/cjs.js","mtime":1594123377914},{"path":"/home/tristan/travail/learning_fullstack/LFS_todolist_2020/node_modules/vue-loader/lib/index.js","mtime":1594123417299}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdwb3N0Q29udGVudCcsCiAgcHJvcHM6IHsKICAgIHBvc3RDb250ZW50OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7fQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBpY3R1cmVQYXRoOiBmdW5jdGlvbiBwaWN0dXJlUGF0aCgpIHsKICAgICAgaWYgKCF0aGlzLnBvc3RDb250ZW50LnBob3RvKSByZXR1cm47CiAgICAgIHJldHVybiByZXF1aXJlKCIuLi9hc3NldHMvIi5jb25jYXQodGhpcy5wb3N0Q29udGVudC5waG90bywgIi5qcGciKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["postContent.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GAFA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,CAAA,KAAA,WAAA,CAAA,KAAA,EACA;AACA,aAAA,OAAA,qBAAA,KAAA,WAAA,CAAA,KAAA,UAAA;AACA;AALA;AARA,CAAA","sourcesContent":["<template>\n    <div class=\"post-content\">\n        <p>{{ postContent.text }}</p>\n        <img :src=\"picturePath\" alt=\"\">\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'postContent',\n        props: {\n            postContent: {\n                type: Object,\n                default: () => {},\n            },\n        },\n        computed: {\n            picturePath() {\n                if (!this.postContent.photo)\n                    return;\n                return require(`../assets/${this.postContent.photo}.jpg`);\n            }\n        },\n    }\n</script>\n\n<style lang=\"css\" scoped>\np {\n    color: #808e9b;\n    font-size: 18px;\n}\n</style>"],"sourceRoot":"src/components"}]}